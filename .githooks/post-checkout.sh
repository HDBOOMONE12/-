#!/bin/sh

previous_commit=$1
new_commit=$2
branch_checkout=$3

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∏–∑ .githooks –≤ –∫–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
cd "$(dirname "$0")/.."

# –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π Liquibase-—Ç–µ–≥ –¥–ª—è previous_commit
prev_last_liquibase_tag=$(
  git log "$previous_commit" -p -- '*.yml' '*.yaml' \
    | grep -E '^[[:space:]]*\+.*tag:[[:space:]]*".*"' \
    | sed -E 's/^[[:space:]]*\+.*tag:[[:space:]]*"([^"]+)".*/\1/' \
    | head -1
)

# –ù–∞—Ö–æ–¥–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π Liquibase-—Ç–µ–≥ –¥–ª—è new_commit
new_last_liquibase_tag=$(
  git log "$new_commit" -p -- '*.yml' '*.yaml' \
    | grep -E '^[[:space:]]*\+.*tag:[[:space:]]*".*"' \
    | sed -E 's/^[[:space:]]*\+.*tag:[[:space:]]*"([^"]+)".*/\1/' \
    | head -1
)

# –ï—Å–ª–∏ –Ω–µ—Ç —Ç–µ–≥–æ–≤ –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞, –≤—ã—Ö–æ–¥–∏–º
if [ -z "$new_last_liquibase_tag" ]; then
    echo "‚ÑπÔ∏è –ù–µ—Ç —Ç–µ–≥–æ–≤ Liquibase –¥–ª—è –Ω–æ–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞."
    exit 0
fi

# –ï—Å–ª–∏ —Ç–µ–≥–∏ –¥–ª—è previous –∏ new –æ–¥–∏–Ω–∞–∫–æ–≤—ã, –≤—ã—Ö–æ–¥–∏–º
if [ "$prev_last_liquibase_tag" = "$new_last_liquibase_tag" ]; then
    echo "‚ÑπÔ∏è –¢–µ–≥–∏ Liquibase –æ–¥–∏–Ω–∞–∫–æ–≤—ã, –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
    exit 0
fi

echo "üö© –ù–æ–≤—ã–π Liquibase-—Ç–µ–≥: $new_last_liquibase_tag"

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º, –æ—Ç–∫–∞—Ç –∏–ª–∏ –≤–ø–µ—Ä—ë–¥
if git merge-base --is-ancestor "$new_commit" "$previous_commit"; then
    echo "‚è™ –û—Ç–∫–∞—Ç –±–∞–∑—ã –Ω–∞ $new_last_liquibase_tag..."
    cd src/main/resources
    liquibase rollback "$new_last_liquibase_tag" --defaultsFile=liquibase.properties
else
    echo "‚è© –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–∑—É..."
    cd src/main/resources
    liquibase update --defaultsFile=liquibase.properties
fi